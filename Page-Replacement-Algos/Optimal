Optimal Page Replacement Algorithm

    The theoretically optimal page replacement algorithm is an algorithm that works as follows: when a page needs 
    to be swapped in, the operating system swaps out the page whose next use will occur farthest in the future. For 
    example, a page that is not going to be used for the next 6 seconds will be swapped out over a page that is going 
    to be used within the next 0.4 seconds.

    This algorithm cannot be implemented in the general purpose operating system because it is impossible to compute 
    reliably how long it will be before a page is going to be used, except when all software that will run on a system 
    is either known beforehand and is amenable to the static analysis of its memory reference patterns, or only a class 
    of applications allowing run-time analysis.

    Despite this limitation, algorithms exist that can offer near-optimal performance â€” the operating system keeps track 
    of all pages referenced by the program, and it uses those data to decide which pages to swap in and out on subsequent 
    runs. This algorithm can offer near-optimal performance, but not on the first run of a program, and only if the 
    program's memory reference pattern is relatively consistent each time it runs.

    Analysis of the paging problem has also been done in the field of online algorithms. Efficiency of randomized online 
    algorithms for the paging problem is measured using amortized analysis.
